{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","Date","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ececbcec.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                        \n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}